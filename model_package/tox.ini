[tox]
envlist =
	test_package
	stylechecks
	lint 
	typechecks 
	
skipsdist = True


[testenv]
install_command = pip install {opts} {packages}
passenv =
	GEMFURY_URL
	PYPI_USER
	PYPI_PASS


allowlist_externals= *

[testenv:test_package]
deps =
	-rrequirements/test_requirements.txt

setenv =
	PYTHONPATH=.
	PYTHONHASHSEED=0

commands=
	pytest \
	-s \
	-vv \
	{posargs:tests/}

[testenv:train]
envdir = {toxworkdir}/test_package
deps =
	{[testenv:test_package]deps}

setenv =
	{[testenv:test_package]setenv}

commands=
	python sentiment_model/train_pipeline.py


[testenv:publish_test_model]
envdir = {toxworkdir}/test_package
deps =
	{[testenv:test_package]deps}

setenv =
	{[testenv:test_package]setenv}

commands=
	python setup.py bdist_wheel
	bash -ec 'for file in $(ls dist); do curl -F package=@"dist/$file" $GEMFURY_URL; done'
	# bash -ec 'twine upload --repository testpypi "dist/*" -u $PYPI_USER -p $PYPI_PASS'
	

[testenv:publish_model]
envdir = {toxworkdir}/test_package
deps =
	{[testenv:test_package]deps}

setenv =
	{[testenv:test_package]setenv}

commands=
	python setup.py bdist_wheel
	bash -ec 'twine upload "dist/*" -u $PYPI_USER -p $PYPI_PASS'

[testenv:typechecks]
envdir = {toxworkdir}/test_package

deps =
	{[testenv:test_package]deps}

commands = {posargs:mypy sentiment_model}


[testenv:stylechecks]
envdir = {toxworkdir}/test_package

deps =
	{[testenv:test_package]deps}

commands = {posargs:flake8 sentiment_model tests}


[testenv:lint]
envdir = {toxworkdir}/test_package

deps =
	{[testenv:test_package]deps}

commands =
	isort sentiment_model tests
	black sentiment_model tests
	mypy sentiment_model
	flake8 sentiment_model

	# NOTE: isort, black both pass all tests but conflict with flake8 in that they creat a space before

	

[flake8]
exclude = .git,env
max-line-length = 90
